#include <dt-bindings/zmk/matrix_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
/* Reference: https://docs.zephyrproject.org/apidoc/latest/group__input__events.html */

&adc {
	status = "okay";
};

/ {
	kscan0: kscan0 {
		compatible = "zmk,kscan-gpio-matrix";
		diode-direction = "col2row";
		wakeup-source;
		
		col-gpios
		= <&gpio0 0 GPIO_ACTIVE_HIGH>
		, <&gpio0 1 GPIO_ACTIVE_HIGH>
		, <&gpio0 2 GPIO_ACTIVE_HIGH>
		, <&gpio0 3 GPIO_ACTIVE_HIGH>
		;
		
		row-gpios
		= <&gpio0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		, <&gpio0 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		, <&gpio0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		, <&gpio0 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		;
	};
	
	left_encoder: encoder_left {
		compatible = "alps,ec11";
		a-gpios = <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
	};
	
	middle_encoder: encoder_middle {
		compatible = "alps,ec11";
		a-gpios = <&gpio0 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
	};
	
	right_encoder: encoder_right {
		compatible = "alps,ec11";
		a-gpios = <&gpio0 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
	};

	anin0: analog_input_0 {
		compatible = "zmk,analog-input";
		sampling-hz = <100>;
		x-ch {
			io-channels = <&adc 0>;
			mv-mid = <1630>;
			mv-min-max = <1600>;
			mv-deadzone = <10>;
			scale-multiplier = <1>;
			scale-divisor = <70>;
			invert;
			evt-type = <INPUT_EV_REL>;
			input-code = <INPUT_REL_X>;
		};
		y-ch {
			io-channels = <&adc 1>;
			mv-mid = <1630>;
			mv-min-max = <1600>;
			mv-deadzone = <10>;
			scale-multiplier = <3>;
			scale-divisor = <4>;
			invert;
			evt-type = <INPUT_EV_REL>;
			input-code = <INPUT_REL_Y>;

			/* enable report mdoe for gamepad axix or knob */
			/* to only call input_report on quantquantized value is updated */
			// report-on-change-only;

		};
	};
	
	default_transform: keymap_transform0 {
		compatible = "zmk,matrix-transform";
		columns = <4>;// Length of the "col-gpios" array
		rows = <4>;// Length of the "row-gpios" array
		map = <
		//   Key 1 | Key 2 | Key 3 
		RC(0,0) RC(0,1) RC(0,2)
		//   Key 4 | Key 5 | Key 6 | Key 7
		RC(1,0) RC(1,1) RC(1,2) RC(1,3)
		//   Key 8 | Key 9 | Key 10 | Key 11
		RC(2,0) RC(2,1) RC(2,2) RC(2,3)
		//   Key 12 | Key 13 | Key 14 | Key 15
		RC(3,0) RC(3,1) RC(3,2) RC(3,3)
		>;
	};
	
	default_layout: default_layout {
		compatible = "zmk,physical-layout";
		display-name = "Default Layout";
		transform = <&default_transform>;
		kscan = <&kscan0>;
	};
	
	chosen {
		zmk,physical-layout = &default_layout;
		// Other chosen items
		zmk,underglow = &led_strip;
	};
	
	
	sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&left_encoder &middle_encoder &right_encoder> ;
		triggers-per-rotation = <20>;
	};

	
	
};



// &adc {
// 	status = "okay";
// };

// / {
// 	anin0: analog_input_0 {
// 		compatible = "zmk,analog-input";
// 		sampling-hz = <100>;
// 		x-ch {
// 			io-channels = <&adc 2>;
// 			mv-mid = <1630>;
// 			mv-min-max = <1600>;
// 			mv-deadzone = <10>;
// 			scale-multiplier = <1>;
// 			scale-divisor = <70>;
// 			invert;
// 			evt-type = <INPUT_EV_REL>;
// 			input-code = <INPUT_REL_X>;
// 		};
// 		y-ch {
// 			io-channels = <&adc 3>;
// 			mv-mid = <1630>;
// 			mv-min-max = <1600>;
// 			mv-deadzone = <10>;
// 			scale-multiplier = <1>;
// 			scale-divisor = <70>;
// 			invert;
// 			evt-type = <INPUT_EV_REL>;
// 			input-code = <INPUT_REL_Y>;
// 		};
// 	};
// };